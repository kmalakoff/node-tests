'use strict';

var common = require('../common');

var assert = require('assert');

var path = require('path');

var fs = require('fs');

var tmpdir = require('../common/tmpdir');

var testDir = tmpdir.path;
var filenameOne = 'watch.txt';
tmpdir.refresh();
var testsubdir = fs.mkdtempSync(testDir + path.sep);
var relativePathOne = path.join(path.basename(testsubdir), filenameOne);
var filepathOne = path.join(testsubdir, filenameOne);

if (!common.isOSX && !common.isWindows) {
  assert["throws"](function () {
    fs.watch(testDir, {
      recursive: true
    });
  }, {
    code: 'ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'
  });
  return;
}

var watcher = fs.watch(testDir, {
  recursive: true
});
var watcherClosed = false;
watcher.on('change', function (event, filename) {
  assert.ok(event === 'change' || event === 'rename'); // Ignore stale events generated by mkdir and other tests

  if (filename !== relativePathOne) return;

  if (common.isOSX) {
    clearInterval(interval);
  }

  watcher.close();
  watcherClosed = true;
});
var interval;

if (common.isOSX) {
  interval = setInterval(function () {
    fs.writeFileSync(filepathOne, 'world');
  }, 10);
} else {
  fs.writeFileSync(filepathOne, 'world');
}

process.on('exit', function () {
  assert(watcherClosed, 'watcher Object was not closed');
});